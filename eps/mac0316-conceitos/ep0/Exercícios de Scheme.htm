<?xml version="1.0"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
               "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>Exerc&iacute;cios de Scheme</title>
<link rel="stylesheet" href="stylesheet.css" type="text/css" />
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
</head>

<body>
<h2>Exerc&iacute;cios de Scheme</h2>
<h3 class="Subheading">
MAC0316/MAC5754 - Conceitos de Linguagens de Programa&ccedil;&atilde;o
</h3>
<p />

Para adquirir pr&aacute;tica com a linguagem Scheme, use estas listas de exerc&iacute;cios:
<ul>
  <li><a href="problem-set-1.pdf">Lista 1</a> (<a href="solution-1.ss">solu&ccedil;&atilde;o
      da lista 1</a>)</li>
  <li><a href="problem-set-2.pdf">Lista 2</a> (<a href="solution-2.ss">solu&ccedil;&atilde;o
      da lista 2</a>)</li>
  <li><a href="problem-set-3.pdf">Lista 3</a> (<a href="solution-3.ss">solu&ccedil;&atilde;o
      da lista 3</a>)</li>
</ul>
Essas listas foram criadas por Shriram Krishamurthy (o autor do PLAI). Elas
s&atilde;o empregadas na disciplina de Linguagens de Programa&ccedil;&atilde;o da Brown University.
<p />
Como usar as listas acima? Estas s&atilde;o as minhas recomenda&ccedil;&otilde;es:
<ul>
  <li>Use os exerc&iacute;cios de 2 a 10 (esses exerc&iacute;cios est&atilde;o na lista 1) como
      aquecimento. Essa primeira lista &eacute; bem f&aacute;cil e tem o objetivo de ajudar
      na fixa&ccedil;&atilde;o da parte b&aacute;sica da linguagem. (N&atilde;o espere ver exerc&iacute;cios t&atilde;o 
      f&aacute;ceis assim numa prova!) Se voc&ecirc; achar esses exerc&iacute;cios f&aacute;ceis
      <em>demais</em>, passe para a lista 2.</li> 
  <li>Fa&ccedil;a os exerc&iacute;cios de 11 a 20 (esses exerc&iacute;cios est&atilde;o na lista 2).</li>
  <li>Da lista 3, fa&ccedil;a os exerc&iacute;cios 24, 25 (nestes dois use <code>map</code>
      ou <code>filter</code> - ignore a men&ccedil;&atilde;o &agrave;s fun&ccedil;&otilde;es <code>foldl</code> e
      <code>foldr</code>, que n&oacute;s ainda n&atilde;o estudamos), 26, 27 (s&oacute; a vers&atilde;o
      que n&atilde;o usa <code>foldr</code>), 28, 29 e 30.</li>
</ul>
<p />
Al&eacute;m dos exerc&iacute;cios do Krishnamurthy, fa&ccedil;a os dois exerc&iacute;cios abaixo:
<ol>
  <li>Escreva uma fun&ccedil;&atilde;o <code>(merge l1 l2)</code>, que recebe duas listas de
      n&uacute;meros, <code>l1</code> e <code>l2</code>, ambas em ordem crescente, e
      devolve uma terceira lista, tamb&eacute;m em ordem crescente, com os mesmos
      elementos que as duas listas recebidas. Em outras palavras, a fun&ccedil;&atilde;o
      <code>merge</code> devolve a intercala&ccedil;&atilde;o de duas listas num&eacute;ricas
      crescentes. Sua implementa&ccedil;&atilde;o de <code>merge</code> n&atilde;o precisa usar
      recurs&atilde;o de cauda. Ela deve ser eficiente, ou seja, a fun&ccedil;&atilde;o
      <code>merge</code> deve percorrer as listas <code>l1</code> e
      <code>l2</code> apenas uma vez.</li> 
  <li>Reescreva a sua fun&ccedil;&atilde;o <code>merge</code> de modo que a recurs&atilde;o seja de
      cauda. Como no exerc&iacute;cio anterior, as listas <code>l1</code> e
      <code>l2</code> devem ser percorridas apenas uma vez. Dicas:
      <ul>
	<li>Fa&ccedil;a a fun&ccedil;&atilde;o <code>merge</code> chamar uma fun&ccedil;&atilde;o auxiliar que
	    recebe um par&acirc;metro adicional, o qual &eacute; uma lista contendo a 
	    "intercala&ccedil;&atilde;o parcial reversa" das duas listas dadas.</li>
	<li>Olhe a <a
	    href="http://www.ime.usp.br/~reverbel/CLP-11/exemplos/map2.rkt">segunda
	    implementa&ccedil;&atilde;o de map</a> vista em classe.</li> 
      </ul>
  </li>
</ol>
<p />
<strong>Sobre a entrega</strong>
<p>
Este trabalho deve ser entregue at&eacute; o dia 20 de mar&ccedil;o, por meio do sistema <a 
href="http://paca.ime.usp.br">Paca/Moodle</a>. (N.B.: Entregue s&oacute;
as solu&ccedil;&otilde;es desses dois exerc&iacute;cios. N&atilde;o mande solu&ccedil;&otilde;es dos exerc&iacute;cios do
Krishnamurthy.)
</p>
<p>
Deve ser entregue um arquivo fonte em Scheme. Para entregar as duas vers&otilde;es da
fun&ccedil;&atilde;o <code>merge</code> no mesmo arquivo-fonte, renomeie a primeira vers&atilde;o
(a que n&atilde;o usa recurs&atilde;o de cauda) para <code>simple-merge</code>.
</p>
<p>
O nome do arquivo entregue deve ser da forma
<code>ep0-</code>&lt;seu-nome&gt;<code>.rkt</code> ou 
<code>ep0-</code>&lt;seu-nome&gt;<code>.scm</code>.
Por exemplo: <code>ep0-fulano-de-tal.rkt</code>. No nome do arquivo devem ser
omitidos os acentos do seu nome. Al&eacute;m disso, a separa&ccedil;&atilde;o entre palavras n&atilde;o
deve ser feita com espa&ccedil;os. Ou seja, o arquivo n&atilde;o deve se chamar
"<code>ep0-jo&atilde;o-da-silva.rkt</code>" nem 
"<code>ep0&nbsp;joao&nbsp;da&nbsp;silva.rkt</code>".
</p>
<hr />
<address>
<a href="http://jigsaw.w3.org/css-validator"><img src="../vcss.gif"
   alt="Valid CSS!" align="right" border="0" width="88" height="31" /></a>  
<a href="http://validator.w3.org/check/referer"><img src="../vxhtml10.gif"
   alt="Valid XHTML 1.0!" align="right" border="0" width="88"
   height="31" /></a>  
<!-- hhmts start -->
Last modified: Fri Mar 18 21:03:59 BRT 2011
<!-- hhmts end -->
<br />
</address>
</body>

</html>
